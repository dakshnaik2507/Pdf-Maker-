import tkinter as tk
from tkinter import filedialog, messagebox, Listbox, Scrollbar
from PIL import Image
import os

class PDFMakerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Image to PDF Converter")
        self.root.geometry("500x400")
        self.root.configure(bg="#2c3e50")

        self.images = []

        tk.Label(root, text="PDF Maker from Images", fg="white", bg="#2c3e50", font=("Arial", 16)).pack(pady=10)

        self.select_btn = tk.Button(root, text="Select Images", font=("Arial", 12), command=self.select_images, bg="#27ae60", fg="white")
        self.select_btn.pack(pady=5)

        # Listbox to show selected files
        self.listbox = Listbox(root, width=60, height=10)
        self.listbox.pack(pady=10)

        # Scrollbar for the listbox
        scrollbar = Scrollbar(root)
        scrollbar.pack(side="right", fill="y")
        self.listbox.config(yscrollcommand=scrollbar.set)
        scrollbar.config(command=self.listbox.yview)

        self.save_btn = tk.Button(root, text="Save as PDF", font=("Arial", 12), command=self.save_pdf, bg="#2980b9", fg="white")
        self.save_btn.pack(pady=20)

    def select_images(self):
        file_paths = filedialog.askopenfilenames(title="Select Images", filetypes=[("Image Files", "*.png;*.jpg;*.jpeg")])
        self.images = list(file_paths)
        self.listbox.delete(0, tk.END)
        for img in self.images:
            self.listbox.insert(tk.END, os.path.basename(img))

    def save_pdf(self):
        if not self.images:
            messagebox.showerror("Error", "No images selected.")
            return

        img_list = []
        for file in self.images:
            img = Image.open(file).convert("RGB")
            img_list.append(img)

        save_path = filedialog.asksaveasfilename(defaultextension=".pdf", filetypes=[("PDF File", "*.pdf")])
        if save_path:
            try:
                img_list[0].save(save_path, save_all=True, append_images=img_list[1:])
                messagebox.showinfo("Success", f"PDF saved successfully at:\n{save_path}")
            except Exception as e:
                messagebox.showerror("Error", str(e))

if __name__ == "__main__":
    root = tk.Tk()
    app = PDFMakerApp(root)
    root.mainloop()
